{"version":3,"sources":["ControlButton/ControlButton.jsx","ControlButtons/ControlButtons.jsx","helpers/helpers.js","Numbers/Numbers.jsx","App.jsx","index.js"],"names":["ControlButton","NumberHandleClick","value","name","isActive","action","type","className","cn","onClick","ControlButtons","clear","EqualAction","onSetSymbol","setMinus","persentHandler","isClear","numbers","Array","keys","reverse","map","item","splice","functions","x","y","Numbers","clickHandler","App","useState","visibleValue","setVisibleValue","firstValue","setfirstValue","setAction","secondValue","setSecondValue","isNewValue","setIsNewValue","isNewCalculation","setIsNewCalculation","setIsClear","setVisibleAndSecondValue","arg","calculate","firstNumber","parseFloat","secondNumber","func","first","second","choosingAction","slice","number","prev","split","length","symbol","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ea91032.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst ControlButton = (\n  { NumberHandleClick,\n    value,\n    name,\n    isActive,\n    action },\n) => (\n  <button\n    type=\"button\"\n    className={cn(\n      'numbers__item',\n      { 'numbers__item--active': isActive && action === value },\n    )}\n    onClick={() => {\n      NumberHandleClick(value);\n    }}\n  >\n    {name || value}\n  </button>\n);\n\nControlButton.propTypes = {\n  NumberHandleClick: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  action: PropTypes.string.isRequired,\n};\n\nexport default ControlButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ControlButton from '../ControlButton/ControlButton';\nimport './ControlButtons.scss';\n\nconst ControlButtons = (\n  { clear,\n    EqualAction,\n    onSetSymbol,\n    setMinus,\n    persentHandler,\n    action,\n    isActive,\n    isClear },\n) => (\n  <>\n    <div className=\"controls__top\">\n      <ControlButton\n        NumberHandleClick={clear}\n        value={isClear ? 'C' : 'AC'}\n      />\n      <ControlButton\n        NumberHandleClick={setMinus}\n        value=\"+/-\"\n      />\n      <ControlButton\n        NumberHandleClick={persentHandler}\n        value=\"%\"\n      />\n      <ControlButton\n        isActive={isActive}\n        action={action}\n        NumberHandleClick={onSetSymbol}\n        value=\"/\"\n      />\n    </div>\n\n    <div className=\"controls__right\">\n      <ControlButton\n        isActive={isActive}\n        action={action}\n        NumberHandleClick={onSetSymbol}\n        name=\"X\"\n        value=\"*\"\n      />\n      <ControlButton\n        isActive={isActive}\n        action={action}\n        NumberHandleClick={onSetSymbol}\n        value=\"-\"\n      />\n      <ControlButton\n        isActive={isActive}\n        action={action}\n        NumberHandleClick={onSetSymbol}\n        value=\"+\"\n      />\n      <ControlButton\n        NumberHandleClick={EqualAction}\n        value=\"=\"\n      />\n    </div>\n  </>\n);\n\nControlButtons.propTypes = {\n  clear: PropTypes.func.isRequired,\n  EqualAction: PropTypes.func.isRequired,\n  isClear: PropTypes.bool.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  action: PropTypes.string.isRequired,\n  onSetSymbol: PropTypes.func.isRequired,\n  setMinus: PropTypes.func.isRequired,\n  persentHandler: PropTypes.func.isRequired,\n};\n\nexport default ControlButtons;\n","export const numbers = [...Array(10).keys()].reverse().map(item => `${item}`);\nnumbers.splice(-1, 0, '.');\n\nexport const functions = {\n  '+': (x, y) => x + y,\n  '-': (x, y) => x - y,\n  '*': (x, y) => x * y,\n  '/': (x, y) => x / y,\n};\n","import React from 'react';\nimport './Numbers.scss';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport { numbers } from '../helpers/helpers';\n\nconst Numbers = ({ clickHandler }) => (\n  <>\n    <div className=\"numbers\">\n      {numbers.map(item => (\n        <button\n          type=\"button\"\n          className={cn(\n            'numbers__item',\n            { 'numbers__item--zero': item === '0' },\n          )}\n          onClick={() => clickHandler(item)}\n        >\n          {item}\n        </button>\n      ))}\n    </div>\n\n  </>\n);\n\nNumbers.propTypes = {\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default Numbers;\n","import React, { useState } from 'react';\nimport ControlButtons from './ControlButtons/ControlButtons';\nimport Numbers from './Numbers/Numbers';\nimport './styles/general.scss';\nimport { functions } from './helpers/helpers';\n\nconst App = () => {\n  const [visibleValue, setVisibleValue] = useState('0');\n  const [firstValue, setfirstValue] = useState('0');\n  const [action, setAction] = useState('');\n  const [secondValue, setSecondValue] = useState('0');\n  const [isNewValue, setIsNewValue] = useState(false);\n  const [isNewCalculation, setIsNewCalculation] = useState(false);\n  const [isClear, setIsClear] = useState(false);\n\n  const setVisibleAndSecondValue = (arg) => {\n    setVisibleValue(arg);\n    setSecondValue(arg);\n  };\n\n  // eslint-disable-next-line consistent-return\n  const NumberHandleClick = (number) => {\n    if (isNewCalculation && isClear) {\n      setAction('');\n    }\n\n    if (visibleValue === '0' && number === '.') {\n      setVisibleAndSecondValue(prev => prev + number);\n    } else if (isNewValue && number === '.') {\n      setVisibleAndSecondValue(`${0 + number}`);\n      setIsNewValue(false);\n    } else if (visibleValue.split('.').length === 2 && number === '.') {\n      return null;\n    } else if (isNewValue || visibleValue === '0') {\n      setVisibleAndSecondValue(number);\n      setIsNewValue(false);\n      setIsNewCalculation(false);\n      setIsClear(true);\n    } else if (visibleValue === '-0' && number !== '.') {\n      setVisibleAndSecondValue(`-${number}`);\n    } else {\n      setVisibleAndSecondValue(prev => prev + number);\n      setIsClear(true);\n    }\n  };\n\n  const onSetAction = (symbol) => {\n    setfirstValue(visibleValue);\n\n    if (!isNewValue && !isNewCalculation) {\n      calculate();\n    }\n\n    setIsClear(true);\n    setIsNewCalculation(false);\n    setIsNewValue(true);\n    setSecondValue(visibleValue);\n    setAction(symbol);\n  };\n\n  const EqualAction = () => {\n    if (action.length < 1) {\n      return;\n    }\n\n    setfirstValue(visibleValue);\n    calculate();\n    setIsNewValue(true);\n    setIsNewCalculation(true);\n\n    if (!isClear && secondValue !== '0') {\n      setVisibleValue(secondValue);\n      setfirstValue(secondValue);\n      setIsClear(true);\n    } else {\n      // eslint-disable-next-line consistent-return\n      return null;\n    }\n  };\n\n  const choosingAction = (func, first, second) => {\n    const value = functions[func](first, second);\n\n    setVisibleValue(`${value}`);\n    setfirstValue(`${value}`);\n  };\n\n  // eslint-disable-next-line consistent-return\n  const calculate = () => {\n    if (action === '') {\n      return null;\n    }\n\n    const firstNumber = parseFloat(firstValue);\n    const secondNumber = parseFloat(secondValue);\n\n    choosingAction(action, firstNumber, secondNumber);\n  };\n\n  const clear = () => {\n    if (isClear) {\n      setVisibleValue('0');\n      setIsClear(false);\n    } else {\n      setVisibleAndSecondValue('0');\n      setAction('');\n      setIsNewCalculation(false);\n    }\n  };\n\n  const setMinus = () => {\n    if (isNewValue && !isNewCalculation) {\n      setVisibleValue(`-0`);\n    } else if (!visibleValue.includes('-')) {\n      setVisibleAndSecondValue(prev => `-${prev}`);\n      setIsNewCalculation(true);\n    } else {\n      setVisibleAndSecondValue(visibleValue.slice(1));\n      setIsNewCalculation(true);\n    }\n\n    setIsNewValue(false);\n  };\n\n  const persentHandler = () => {\n    const firstNumber = parseFloat(firstValue);\n    const secondNumber = parseFloat(secondValue);\n\n    if (firstNumber === 0) {\n      setVisibleAndSecondValue(`${1 * secondNumber / 100}`);\n    } else {\n      setVisibleAndSecondValue(`${firstNumber * secondNumber / 100}`);\n    }\n\n    setIsNewValue(true);\n    setIsNewCalculation(true);\n  };\n\n  return (\n    <div className=\"calculator\">\n      <h1>calculator</h1>\n      <p className=\"value\">{visibleValue.slice(0, 12)}</p>\n      <div className=\"buttons\">\n        <Numbers\n          clickHandler={NumberHandleClick}\n        />\n        <ControlButtons\n          isClear={isClear}\n          isActive={isNewValue}\n          action={action}\n          clear={clear}\n          EqualAction={EqualAction}\n          onSetSymbol={onSetAction}\n          setMinus={setMinus}\n          persentHandler={persentHandler}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}